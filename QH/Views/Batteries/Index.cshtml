@model QH.ViewModels.BatteryPage

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm(null, null, null, FormMethod.Post, new { @class = "form-horizontal", id = "BatteryFilter" }))
{
<fieldset>
    <div class="row">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.name)
                @Html.EditorFor(model => model.name)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.maxConfig)
                @Html.EditorFor(model => model.maxConfig)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.maxCapacity)
                @Html.EditorFor(model => model.maxCapacity)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.maxWeight)
                @Html.EditorFor(model => model.maxWeight)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.maxVolume)
                @Html.EditorFor(model => model.maxVolume)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.maxDischarge)
                @Html.EditorFor(model => model.maxDischarge)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.maxCharge)
                @Html.EditorFor(model => model.maxCharge)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.maxPrice)
                @Html.EditorFor(model => model.maxPrice, new { @Value = 0 })
            </div>
            <input type="submit" value="search" />
        </div>
    </div>
</fieldset>
}

@{ Html.RenderPartial("chart", Model); }

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="row" width="100%">
    <table class="table table-striped table-bordered">
    @{var batteryModel = Model.Batteries.FirstOrDefault(); }
        <tr>
            <th class="col-sm-3">
                @Html.DisplayNameFor(model => batteryModel.Name)
            </th>
            <th class="col-sm-1">
                @Html.DisplayNameFor(model => batteryModel.Config)
            </th>
            <th class="col-sm-1">
                @Html.DisplayNameFor(model => batteryModel.Capacity)
            </th>
            <th class="col-sm-1">
                @Html.DisplayNameFor(model => batteryModel.Weight)
            </th>
            <th class="col-sm-2">
                <div> @Html.DisplayNameFor(model => batteryModel.Length) x @Html.DisplayNameFor(model => batteryModel.Height) x @Html.DisplayNameFor(model => batteryModel.Width)</div>
            </th>
            <th class="col-sm-1">
                @Html.DisplayNameFor(model => batteryModel.MaxDischarge)
            </th>
            <th class="col-sm-1">
                @Html.DisplayNameFor(model => batteryModel.MaxCharge)
            </th>
            <th class="col-sm-1">
                @Html.DisplayNameFor(model => batteryModel.Price)
            </th>
            <th class="col-sm-1">
                actions
            </th>
        </tr>

        @foreach (var item in Model.Batteries)
        {
            <tr>
                <td>
                    <a href="@Html.DisplayFor(modelItem => item.Url)">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Config)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td>
                    <div> @Html.DisplayFor(modelItem => item.Length) x @Html.DisplayFor(modelItem => item.Height) x @Html.DisplayFor(modelItem => item.Width)</div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxDischarge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxCharge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
</div>